version: '2.1'

networks:
  internal:
    driver: bridge

services:
  # Application - Node.js app based on CRUX package
  application:
    build: application
    container_name: crux-application
    environment:
      - NODE_ENV=local
    ports:
      - 8080:8080
    networks:
      - internal

  # Grafana - Centralized analytics vizualization
  grafana:
    image: grafana/grafana:9.4.14
    container_name: crux-grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    networks:
      - internal

  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.8.5
    container_name: crux-loki
    ports:
      - 3100:3100
    networks:
      - internal
    command:
      - --config.file=/etc/loki/loki.yaml
    volumes:
      - ./loki:/etc/loki

  # Prometheus - Metrics scraping and timeseries database
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: crux-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - 9090:9090
    networks:
      - internal
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver

  # Tempo - Distributed tracing back-end with object storage
  tempo:
    image: grafana/tempo:2.2.3
    container_name: crux-tempo
    ports:
      - 3200:3200
      - 4317:4317
    networks:
      - internal
    command:
      - --config.file=/etc/tempo/tempo.yaml
    volumes:
      - ./tempo:/etc/tempo

  # Redis - Key value storage
  redis:
    image: redis:7.2.1
    container_name: crux-redis
    ports:
      - 6379:6379
    networks:
      - internal

  # Postgres - Relational Database
  postgres:
    container_name: crux-postgres
    image: postgres:15.4
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=crux
    ports:
      - 5432:5432
    networks:
      - internal
