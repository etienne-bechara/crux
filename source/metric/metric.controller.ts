import { HttpStatus, Query } from '@nestjs/common';
import { ApiResponse } from '@nestjs/swagger';
import { metric } from 'prom-client';

import { Controller, Get } from '../app/app.decorator';
import { MetricData, MetricReadDto } from './metric.dto';
import { MetricService } from './metric.service';

@Controller('metrics', {
  tags: [ 'Application' ],
})
export class MetricController {

  public constructor(
    private readonly metricService: MetricService,
  ) { }

  @Get({
    operationId: 'Read Metrics',
    description: 'Scraping endpoint for metrics generated by Prometheus client.',
    response: { type: String, description: 'Default' },
  })
  @ApiResponse({ type: [ MetricData ], status: HttpStatus.CREATED, description: 'JSON' })
  public getMetrics(@Query() query: MetricReadDto): Promise<string | metric[]> {
    const { json } = query;
    return this.metricService.readMetrics(json);
  }

}
